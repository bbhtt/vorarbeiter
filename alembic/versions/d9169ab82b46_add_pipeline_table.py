"""add_pipeline_table

Revision ID: d9169ab82b46
Revises: b757861a95c5
Create Date: 2025-04-08 12:09:42.595344

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d9169ab82b46"
down_revision: Union[str, None] = "b757861a95c5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "pipeline",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "RUNNING",
                "COMPLETE",
                "FAILED",
                "CANCELLED",
                "PUBLISHED",
                name="pipelinestatus",
            ),
            nullable=False,
        ),
        sa.Column("app_id", sa.String(length=255), nullable=False),
        sa.Column("params", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("finished_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("published_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("webhook_event_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["webhook_event_id"],
            ["webhookevent.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_pipeline_app_id"), "pipeline", ["app_id"], unique=False)
    op.create_index(
        op.f("ix_pipeline_created_at"), "pipeline", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_pipeline_id"), "pipeline", ["id"], unique=False)
    op.create_index(op.f("ix_pipeline_status"), "pipeline", ["status"], unique=False)
    op.create_index(
        op.f("ix_pipeline_webhook_event_id"),
        "pipeline",
        ["webhook_event_id"],
        unique=False,
    )

    if op.get_context().dialect.name == "postgresql":
        op.alter_column(
            "webhookevent",
            "id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )

    op.create_index(
        op.f("ix_webhookevent_received_at"),
        "webhookevent",
        ["received_at"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_webhookevent_received_at"), table_name="webhookevent")

    if op.get_context().dialect.name == "postgresql":
        op.alter_column(
            "webhookevent",
            "id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )

    op.drop_index(op.f("ix_pipeline_webhook_event_id"), table_name="pipeline")
    op.drop_index(op.f("ix_pipeline_status"), table_name="pipeline")
    op.drop_index(op.f("ix_pipeline_id"), table_name="pipeline")
    op.drop_index(op.f("ix_pipeline_created_at"), table_name="pipeline")
    op.drop_index(op.f("ix_pipeline_app_id"), table_name="pipeline")
    op.drop_table("pipeline")
    # ### end Alembic commands ###
